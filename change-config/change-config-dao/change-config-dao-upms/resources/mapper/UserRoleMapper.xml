<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserRole">

    <!--&lt;!&ndash;缓存&ndash;&gt;
    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>-->

    <resultMap id="userRole" type="userRole">
        <id property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="createDate" column="createDate"/>
        <result property="updateDate" column="updateDate"/>

        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
    </resultMap>

    <insert id="insert" parameterType="userRole">
        INSERT INTO userRole_${tableIndex} (
          id,
          type,
          user_id,
          role_id,
          createDate,
          yn
        )VALUES(
          #{id, jdbcType=BIGINT},
          #{type, jdbcType=INTEGER},
          #{user.id, jdbcType=BIGINT},
          #{role.id, jdbcType=BIGINT},
          NOW(),
          1
        )
    </insert>

    <update id="deleteL" parameterType="userRole">
        UPDATE userRole_${tableIndex} SET
          yn=0
        WHERE
          id=#{id, jdbcType=BIGINT}
        and
          yn=1
    </update>

    <update id="restore" parameterType="userRole">
        UPDATE userRole_${tableIndex} SET
          yn=1
        WHERE
          id=#{id, jdbcType=BIGINT}
        AND
          yn=0
    </update>

    <delete id="deleteP" parameterType="userRole">
        DELETE FROM userRole_${tableIndex} WHERE id=#{id, jdbcType=BIGINT} and yn=0
    </delete>

    <update id="update" parameterType="userRole">
        UPDATE userRole_${tableIndex} SET
          type=#{type, jdbcType=INTEGER},
          user_id=#{user.id, jdbcType=BIGINT},
          role_id=#{role.id, jdbcType=BIGINT},
          updateDate=NOW()
        WHERE
          id=#{id, jdbcType=BIGINT}
        and
          yn=1
    </update>

    <select id="select" parameterType="userRole" resultMap="userRole">
        SELECT * FROM userRole_${tableIndex} WHERE id=#{id, jdbcType=BIGINT} AND yn=1
    </select>

    <select id="list" parameterType="int" resultMap="userRole">
        SELECT * FROM userRole_${_parameter} WHERE yn=1
    </select>

    <select id="count" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM userRole_${_parameter} WHERE yn=1
    </select>

    <select id="listByDel" parameterType="int" resultMap="userRole">
        SELECT * FROM userRole_${_parameter} WHERE yn=0
    </select>

    <select id="countByDel" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM userRole_${_parameter} WHERE yn=0
    </select>

    <delete id="clear" parameterType="int">
        DELETE FROM userRole_${_parameter} WHERE yn=0
    </delete>

    <select id="listByUserId" parameterType="map" resultMap="userRole">
        SELECT * FROM userRole_${tableIndex} WHERE yn=1 AND user_id=#{user_id, jdbcType=BIGINT}
    </select>

    <select id="countByUserId" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM userRole_${tableIndex} WHERE yn=1 AND user_id=#{user_id, jdbcType=BIGINT}
    </select>

    <select id="listByRoleId" parameterType="map" resultMap="userRole">
        SELECT * FROM userRole_${tableIndex} WHERE yn=1 AND role_id=#{role_id, jdbcType=BIGINT}
    </select>

    <select id="countByRoleId" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM userRole_${tableIndex} WHERE yn=1 AND role_id=#{role_id, jdbcType=BIGINT}
    </select>
</mapper>