<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderItem">

    <!--&lt;!&ndash;缓存&ndash;&gt;
    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>-->

    <resultMap id="orderItem" type="orderItem">
        <id property="id" column="id"/>
        <result property="unitPrice" column="unitPrice"/>
        <result property="count" column="count"/>
        <result property="totalPrice" column="totalPrice"/>
        <result property="return_id" column="return_id"/>

        <result property="productId" column="product_id"/>
        <result property="orderId" column="order_id"/>
    </resultMap>

    <insert id="insert" parameterType="orderItem">
        INSERT INTO orderItem_${tableIndex} (
          id,
          unitPrice,
          count,
          totalPrice,
          return_id,
          product_id,
          order_id,
          createDate,
          yn
        )VALUES(
          #{id, jdbcType=BIGINT},
          #{unitPrice, jdbcType=FLOAT},
          #{count, jdbcType=INTEGER},
          #{totalPrice, jdbcType=FLOAT},
          #{return_id, jdbcType=BIGINT},
          #{product.id, jdbcType=BIGINT},
          #{order.id, jdbcType=BIGINT},
          NOW(),
          1
        )
    </insert>

    <update id="deleteL" parameterType="orderItem">
        UPDATE orderItem_${tableIndex} SET
          yn=0
        WHERE
          id=#{id, jdbcType=BIGINT}
        and
          yn=1
    </update>

    <update id="restore" parameterType="orderItem">
        UPDATE orderItem_${tableIndex} SET
          yn=1
        WHERE
          id=#{id, jdbcType=BIGINT}
        AND
          yn=0
    </update>

    <delete id="deleteP" parameterType="orderItem">
        DELETE FROM orderItem_${tableIndex} WHERE id=#{id, jdbcType=BIGINT} and yn=0
    </delete>

    <update id="update" parameterType="orderItem">
        UPDATE orderItem_${tableIndex} SET
          totalPrice=#{totalPrice, jdbcType=FLOAT},
          return_id=#{return_id, jdbcType=BIGINT},
          updateDate=NOW()
        WHERE
          id=#{id, jdbcType=BIGINT}
        and
          yn=1
    </update>

    <select id="select" parameterType="orderItem" resultMap="orderItem">
        SELECT * FROM orderItem_${tableIndex} WHERE id=#{id, jdbcType=BIGINT} AND yn=1
    </select>

    <select id="list" parameterType="int" resultMap="orderItem">
        SELECT * FROM orderItem_${_parameter} WHERE yn=1
    </select>

    <select id="count" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM orderItem_${_parameter} WHERE yn=1
    </select>

    <select id="listByDel" parameterType="int" resultMap="orderItem">
        SELECT * FROM orderItem_${_parameter} WHERE yn=0
    </select>

    <select id="countByDel" parameterType="int" resultType="int">
        SELECT COUNT(*) orderItem_${_parameter} WHERE yn=0
    </select>

    <delete id="clear" parameterType="int">
        DELETE FROM orderItem_${_parameter} WHERE yn=0
    </delete>

    <select id="listByOrder_id" parameterType="map" resultMap="orderItem">
        SELECT * FROM orderItem_${tableIndex} WHERE yn=1 AND order_id=#{order_id, jdbcType=BIGINT}
    </select>

    <select id="countByOrder_id" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM orderItem_${tableIndex} WHERE yn=1 AND order_id=#{order_id, jdbcType=BIGINT}
    </select>
</mapper>