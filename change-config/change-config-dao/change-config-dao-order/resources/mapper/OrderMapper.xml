<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Order">

    <!--&lt;!&ndash;缓存&ndash;&gt;
    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>-->

    <resultMap id="order" type="order">
        <id property="id" column="id"/>
        <result property="orderCode" column="orderCode"/>
        <result property="totalPrice" column="totalPrice"/>
        <result property="message" column="message"/>
        <result property="createDate" column="createDate"/>
        <result property="updateDate" column="updateDate"/>

        <result property="storehouseId" column="storehouse_id"/>
        <result property="shopkeeperId" column="shopkeeper_id"/>
        <result property="brandQuotientId" column="brandQuotient_id"/>
    </resultMap>

    <insert id="insert" parameterType="order">
        INSERT INTO order_${tableIndex} (
          id,
          orderCode,
          totalPrice,
          message,
          storehouse_id,
          shopkeeper_id,
          brandQuotient_id,
          createDate,
          yn
        )VALUES(
          #{id, jdbcType=BIGINT},
          #{orderCode, jdbcType=VARCHAR},
          #{totalPrice, jdbcType=FLOAT},
          #{message, jdbcType=VARCHAR},
          #{storehouse.id, jdbcType=BIGINT},
          #{shopkeeper.id, jdbcType=BIGINT},
          #{brandQuotient.id, jdbcType=BIGINT},
          NOW(),
          1
        )
    </insert>

    <update id="deleteL" parameterType="order">
        UPDATE order_${tableIndex} SET
          yn=0
        WHERE
          id=#{id, jdbcType=BIGINT}
        and
          yn=1
    </update>

    <update id="restore" parameterType="order">
        UPDATE order_${tableIndex} SET
        yn=1
        WHERE
        id=#{id, jdbcType=BIGINT}
        AND
        yn=0
    </update>

    <delete id="deleteP" parameterType="order">
        DELETE FROM order_${tableIndex} WHERE id=#{id, jdbcType=BIGINT} and yn=0
    </delete>

    <update id="update" parameterType="order">
        UPDATE order_${tableIndex} SET
          totalPrice=#{totalPrice, jdbcType=FLOAT},
          message=#{message, jdbcType=VARCHAR},
          updateDate=NOW()
        WHERE
          id=#{id, jdbcType=BIGINT}
        and
          yn=1
    </update>

    <select id="select" parameterType="order" resultMap="order">
        SELECT * FROM order_${tableIndex} WHERE id=#{id, jdbcType=BIGINT} AND yn=1
    </select>

    <select id="list" parameterType="int" resultMap="order">
        SELECT * FROM order_${_parameter} WHERE yn=1
    </select>

    <select id="count" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM order_${_parameter} WHERE yn=1
    </select>

    <select id="listByDel" parameterType="int" resultMap="order">
        SELECT * FROM order_${_parameter} WHERE yn=0
    </select>

    <select id="countByDel" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM order_${_parameter} WHERE yn=0
    </select>

    <delete id="clear" parameterType="int">
        DELETE FROM order_${_parameter} WHERE yn=0
    </delete>

    <select id="listByStorehouse_id" parameterType="map" resultMap="order">
        SELECT * FROM order_${tableIndex} WHERE yn=1 AND storehouse_id=#{storehouse_id, jdbcType=BIGINT}
    </select>

    <select id="countByStorehouse_id" parameterType="map" resultType="int">
        SELECT COUNT(*) order_${tableIndex} WHERE yn=1 AND storehouse_id=#{storehouse_id, jdbcType=BIGINT}
    </select>

    <select id="listByShopkeeper_id" parameterType="map" resultMap="order">
        SELECT * FROM order_${tableIndex} WHERE yn=1 AND shopkeeper_id=#{shopkeeper_id, jdbcType=BIGINT}
    </select>

    <select id="countByShopkeeper_id" parameterType="map" resultType="int">
        SELECT COUNT(*) order_${tableIndex} WHERE yn=1 AND shopkeeper_id=#{shopkeeper_id, jdbcType=BIGINT}
    </select>

    <select id="listByBrandQuotient" parameterType="map" resultMap="order">
        SELECT * FROM order_${tableIndex} WHERE yn=1 AND brandQuotient_id=#{brandQuotient_id, jdbcType=BIGINT}
    </select>

    <select id="countByBrandQuotient" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM order_${tableIndex} WHERE yn=1 AND brandQuotient_id=#{brandQuotient_id, jdbcType=BIGINT}
    </select>
</mapper>