<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <import resource="dubbo-consumer.xml"/>

    <!-- 组件扫描(注解) -->
    <context:component-scan base-package="me.cathub.change.apply.web"/>

    <!-- 视图解析器
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/view/" />
        <property name="suffix" value=".html" />
        <property name="contentType" value="text/html"/>
    </bean>
-->
    <bean id="jspViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/view/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="0"/>
    </bean>
    <!-- 模板解析器
    <bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/view/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <property name="cacheable" value="false" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding"  value="UTF-8" />
    </bean>
 -->
    <!-- jackson-annotations.jar,jackson-core.jar,jackson-databind.jar -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- return string encoding -->
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <!-- json -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <mvc:annotation-driven></mvc:annotation-driven>

    <!-- 静态资源-->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!--&lt;!&ndash; spring session &ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:redis.properties"/>-->

    <!--<bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">-->
        <!--<property name="maxInactiveIntervalInSeconds" value="600"/>-->
    <!--</bean>-->

    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxTotal" value="${redis.maxTotal}" />-->
        <!--<property name="maxIdle" value="${redis.maxIdle}" />-->
    <!--</bean>-->

    <!--<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">-->
        <!--<property name="hostName" value="${redis.hostname}"/>-->
        <!--<property name="port" value="${redis.port}"/>-->
        <!--&lt;!&ndash;<property name="password" value="${redis.pwd}" />&ndash;&gt;-->
        <!--<property name="timeout" value="3000"/>-->
        <!--<property name="usePool" value="true"/>-->
        <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
    <!--</bean>-->
</beans>